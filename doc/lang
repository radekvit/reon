RE*					-	{ "repeat *" : RE }
RE+					-	{ "repeat +" : RE }
RE?					-	{ "repeat ?": RE }
RE{m}				-	{ "repeat m" : RE }
RE{m-n}				-	{ "repeat m-n" : RE }
RE{m-}				-	{ "repeat m-" : RE }
RE{-n}				-	{ "repeat -n" : RE }
#non-greedy repetition
RE*?				-	{ "ngrepeat *" : RE }
RE+?				-	{ "ngrepeat +" : RE }
RE??				-	{ "ngrepeat ?" : RE }
RE{m-n}?			-	{ "ngrepeat m-n" : RE }
RE{m-}?				-	{ "ngrepeat m-" : RE }
RE{-n}?				-	{ "ngrepeat -n" : RE }
[abc]				-	{ "set" : "abc" }
[^abc]				-	{ "nset" : "abc" }
A|B|...				-	[ A , B , ... ]
(RE)				-	{ "group" : RE }
(?aiLmsux)			-	{ "flags": "aiLmsux" }
(?:RE)				-	{ "agroup" : RE }
(?ismx-ismx:RE)		-	{ "flag ismx-ismx" : RE }
(?P<name>RE)		-	{ "group name" : RE }
\number				-	{ "reference" : number }
(?P=name)			-	{ "reference" : "name" }
(?#X)				-	{ "comment" : "X" }
(?=RE)				-	{ "lookahead" : RE }
(?!RE)				-	{ "nlookahead" : RE }
#FLRE = fixed length RE
(?<=FLRE)			-	{ "lookbehind" : FLRE }
(?<!=FLRE)			-	{ "nlookbehind" : FLRE }
(?(number)REYes)	-	{ "if" : number , "then": REYes }
(?(id)REYes)	-	{ "if" : "id" , "then": REYes }
(?(number)REYes|RENo)	-	{ "if" : number , "then": REYes , "else": RENo }
(?(id)REYes|RENo)	-	{ "if" : "id" , "then": REYes , "else": RENo }


